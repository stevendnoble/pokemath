var resizeTimer;

// Checks the size of the browser and alerts the user if
// window is too small to view
function browserTooSmall() {
  if (resizeTimer) {
    clearTimeout(resizeTimer);
  }
  resizeTimer = setTimeout(function() {
    var winWidth = $(window).width();
    var winHeight = $(window).height();

    if ((winWidth < 640) || (winHeight < 480)) {
      alert("Window size too small!");
    }
  }, 500);
}

$(document).ready(function() {
  var $gameScreen = $('.game-screen'),
      $gameTile = $('.game-tile'),
      $gameMap = $('#game-map'),
      $battleScreen = $('#battle-screen');

  var ashUrl = '<img src="/assets/ash/ash.png" id="ash">';

  // 0 = available tile
  // 1 = Ash (player character)
  // 2 = pokemon
  // 3+ = obstacles
  var mapArray = [
    [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0, 3],
    [3, 0, 5, 0, 4, 4, 3, 0, 5, 5, 0, 3],
    [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
    [3, 0, 0, 3, 0, 4, 0, 0, 3, 0, 1, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
  ];

  var columnHeight;

  // Generates jquery selector for the given row and column
  function generateSelector(row, col) {
    selector = '#r' + row + 'c' + col;
    return selector;
  }

  // Place objects and characters on the map.
  // Place given obstacle at the given row and column
  function placeObstacle(obstacle, row, col) {
    selector = generateSelector(row, col);
    $(selector).addClass('obstacle' + obstacle + '-tile');
    $(selector).addClass('obstacle');
  }

  function placeAsh(row, col, callback) {
    selector = generateSelector(row, col);
    $(selector).html(ashUrl);
  }

  // Place given number of pokemon on the map
  function placePokemon(number) {
    var pokemonId,
        checkTile,
        row,
        col,
        imageUrlToAppend;
    for(i=0; i<number; i++) {
      pokemonId = 1 + Math.floor(151*Math.random());
      checkTile = true;
      while (checkTile) {
        row = 1 + Math.floor(4*Math.random());
        col = 1 + Math.floor(10*Math.random());
        selector = generateSelector(row, col);
        if (mapArray[row][col] === 0) {
          checkTile = false;
          $(selector).addClass('pokemon');
          imageUrlToAppend = '<img src="/assets/pokemon/' + pokemonId + '.png" class="img-responsive">';
          $(selector).html(imageUrlToAppend);
          mapArray[row][col] = 2;
        }
      }
    }
  }

  // Sets the height of a tile to be the same as the width
  // to make each one a square
  function setSize() {
    columnHeight = Math.floor($gameMap.width() / 12);
    $gameTile.height(columnHeight);
    $gameTile.width(columnHeight);
    $battleScreen.height(6*columnHeight);
  }

  // 0 represents an open square (only a ground tile)
  // 1 represents Ash
  // 2 represents Pokemon
  // 3+ represent Obstacles
  function setMap() {
    for(i=0;i<6;i++) {
      for(j=0;j<12;j++) {
        if(mapArray[i][j] >= 3) {
          placeObstacle(mapArray[i][j], i, j);
        } else if (mapArray[i][j] === 1) {
          placeAsh(i, j);
        }
      }
    }
    setSize();
    placePokemon(5);
    browserTooSmall();
  }

  function startTimer(duration, display) {
     var timer = duration; 
     var seconds;
     var interval = setInterval(function (){
       seconds = timer;
       if(seconds < 10){
         seconds = "0" + seconds;
       }
       display.text("0:" + seconds);
       //Auto resets timer once reaches 0. 
       //If need to reset, funct clearInterval. setInterval return value as parameter. 
       if (--timer < 0) {
         //timer = duration;
         clearInterval(interval);
       }
     }, 1000);
  }

  // jQuery(function ($) {
  //    var fiveMinutes = 60 * 5,
  //        tenSeconds = 10,
  //        display = $('#time');
  //    startTimer(tenSeconds, display);
  // });

  $(window).on("resize", setSize);
  $(window).on("resize", browserTooSmall);

  $(".site.map").ready(function() {
    var ashPos = { row: 3, col: 5 }
    var keyPressed;

    $(document).on('keypress', function(event) {
      event.preventDefault();
      keyPressed = event.which;
      if (keyPressed === 106) {
        // left
        console.log('left');
        // if (mapArray[ashPos.row][ashPos.col - 1] === 0) {
          $('#ash').animate({ left: ('-='+columnHeight) });
          ashPos.col -= 1;
          mapArray[ashPos.row][ashPos.col - 1] = 1;
          mapArray[ashPos.row][ashPos.col] = 0;
        // }
      } else if (keyPressed === 105) {
        // up
        console.log('up');
        // if (mapArray[ashPos.row - 1][ashPos.col] === 0) {
          $('#ash').animate({ top: ('-='+columnHeight) });
          ashPos.row -= 1;
          mapArray[ashPos.row - 1][ashPos.col] = 1;
          mapArray[ashPos.row][ashPos.col] = 0;
        // }
      } else if (keyPressed === 108) {
        // right
        console.log('right');
        // if (mapArray[ashPos.row + 1][ashPos.col + 1] === 0) {
          $('#ash').animate({ left: ('+='+columnHeight) });
          ashPos.col += 1;
          mapArray[ashPos.row][ashPos.col + 1] = 1;
          mapArray[ashPos.row][ashPos.col] = 0;
        // }
      } else if (keyPressed === 107) {
        // down
        console.log('down');
        // if (mapArray[ashPos.row][ashPos.col] === 0) {
          $('#ash').animate({ top: ('+='+columnHeight) });
          ashPos.row += 1;
          mapArray[ashPos.row + 1][ashPos.col] = 1;
          mapArray[ashPos.row][ashPos.col] = 0;
        // }
      }
    });

    function checkDirection() {

    }

    function moveAsh(){

    }
    
    function initiateBattle() {

    }
  });

  setMap();
});

















