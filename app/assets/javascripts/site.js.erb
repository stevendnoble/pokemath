// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.
// # You can use CoffeeScript in this file: http: //coffeescript.org/

var resizeTimer;

// Checks the size of the browser and alerts the user if
// window is too small to view
function browserTooSmall() {
  if (resizeTimer) {
    clearTimeout(resizeTimer);
  }
  resizeTimer = setTimeout(function() {
    var winWidth = $(window).width();
    var winHeight = $(window).height();

    if ((winWidth < 640) && (winHeight < 480)) {
      alert("Window size too small!");
    }
  }, 500);
}

$(document).ready(function() {
  var $firstBox = $('#r0c0');
  var $gameTile = $('.game-tile');

  var mapArray = [
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
                  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
                  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
                  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                ];

  // Sets the height of a tile to be the same as the width
  // to make each one a square
  function squareTile() {
    var columnHeight = $('#r0c0').width();
    $('.game-tile').height(columnHeight);
  }
  squareTile();
  browserTooSmall();

  // Generates jquery selector for the given row and column
  function generateSelector(row, col) {
    selector = '#r' + row + 'c' + col;
    return selector;
  }

  // Place given obstacle at the given row and column
  function placeObstacle(obstacle, row, col) {
    selector = generateSelector(row, col);
    $(selector).addClass(obstacle + '-tile');
    $(selector).addClass('obstacle');
    mapArray[row][col] = Number(obstacle[8]);
  }

  placeObstacle('obstacle1', 1, 3);
  placeObstacle('obstacle1', 1, 10);
  placeObstacle('obstacle1', 2, 6);
  placeObstacle('obstacle1', 4, 2);
  placeObstacle('obstacle1', 3, 7);
  placeObstacle('obstacle2', 1, 1);
  placeObstacle('obstacle2', 4, 5);
  placeObstacle('obstacle2', 3, 8);
  placeObstacle('obstacle3', 2, 7);
  placeObstacle('obstacle3', 4, 10);
  placeObstacle('obstacle3', 3, 3);

  // Place given number of pokemon on the map
  function placePokemon(number) {
    var pokemonId,
        checkTile,
        row,
        col,
        imageUrlToAppend;
    for(i=0; i<number; i++) {
      pokemonId = 1 + Math.floor(151*Math.random());
      checkTile = true;
      while (checkTile) {
        row = 1 + Math.floor(4*Math.random());
        col = 1 + Math.floor(10*Math.random());
        selector = generateSelector(row, col);
        if (!($(selector).hasClass('obstacle')||$(selector).hasClass('pokemon')||$(selector).hasClass('ash'))) {
          checkTile = false;
          $(selector).addClass('pokemon');
          imageUrlToAppend = '<img src="/assets/' + pokemonId + '.png" class="img-responsive">';
          $(selector).html(imageUrlToAppend);
          mapArray[row][col] = 9;
        }
      }
    }
  }

  placePokemon(5);

  $(window).on("resize", squareTile);
  $(window).on("resize", browserTooSmall);
});















