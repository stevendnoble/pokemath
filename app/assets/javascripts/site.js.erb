// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.
// # You can use CoffeeScript in this file: http: //coffeescript.org/

var resizeTimer;

// Checks the size of the browser and alerts the user if
// window is too small to view
function browserTooSmall() {
  if (resizeTimer) {
    clearTimeout(resizeTimer);
  }
  resizeTimer = setTimeout(function() {
    var winWidth = $(window).width();
    var winHeight = $(window).height();

    if ((winWidth < 640) || (winHeight < 480)) {
      alert("Window size too small!");
    }
  }, 500);
}

$(document).ready(function() {
  var $firstBox = $('#r0c0'),
      $gameScreen = $('.game-screen'),
      $gameTile = $('.game-tile'),
      $gameMap = $('#game-map'),
      $battleScreen = $('#battle-screen'),
      $ash = $('#ash');

  var ashUrl = '<img src="/assets/d1.png" id="ash">';
  var columnHeight;

  var mapArray = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1],
    [1, 0, 2, 0, 3, 3, 1, 0, 2, 2, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 1, 0, 3, 0, 8, 1, 0, 0, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
  ];

  // Generates jquery selector for the given row and column
  function generateSelector(row, col) {
    selector = '#r' + row + 'c' + col;
    return selector;
  }

  // Place objects and characters on the map.
  // Place given obstacle at the given row and column
  function placeObstacle(obstacle, row, col) {
    selector = generateSelector(row, col);
    $(selector).addClass('obstacle' + obstacle + '-tile');
    $(selector).addClass('obstacle');
  }

  function placeAsh(row, col) {
    selector = generateSelector(row, col);
    $(selector).html(ashUrl);
    var ashHeight = $ash.height();
/*** Not recognizing ^ */
    columnHeight = $gameScreen.width() / 12;
    $ash.css('margin', ((columnHeight - ashHeight) / 2))
  }

  // Place given number of pokemon on the map
  function placePokemon(number) {
    var pokemonId,
        checkTile,
        row,
        col,
        imageUrlToAppend;
    for(i=0; i<number; i++) {
      pokemonId = 1 + Math.floor(151*Math.random());
      checkTile = true;
      while (checkTile) {
        row = 1 + Math.floor(4*Math.random());
        col = 1 + Math.floor(10*Math.random());
        selector = generateSelector(row, col);
        if (mapArray[row][col] === 0) {
          checkTile = false;
          $(selector).addClass('pokemon');
          imageUrlToAppend = '<img src="/assets/pokemon/' + pokemonId + '.png" class="img-responsive">';
          $(selector).html(imageUrlToAppend);
          mapArray[row][col] = 9;
        }
      }
    }
  }

  // Sets the height of a tile to be the same as the width
  // to make each one a square
  function setSize() {
    columnHeight = $gameScreen.width() / 12;
    $gameTile.height(columnHeight);
    $battleScreen.height(6*columnHeight);
  }

  // 0 represents an open square (only a ground tile)
  // 1-3 represents obstacles 1-3
  // 8 represents Ash
  // 9 represents Pokemon
  function setMap() {
    for(i=0;i<6;i++) {
      for(j=0;j<12;j++) {
        if(mapArray[i][j] >= 1 && mapArray[i][j] <= 3) {
          placeObstacle(mapArray[i][j], i, j);
        } else if (mapArray[i][j] === 8) {
          placeAsh(i, j);
        }
      }
    }
    setSize();
    placePokemon(5);
    browserTooSmall();
  }

  $(window).on("resize", setSize);
  $(window).on("resize", browserTooSmall);

  setMap();
});
















