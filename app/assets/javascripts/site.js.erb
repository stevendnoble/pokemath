$(document).ready(function() {
  $(".site.map").ready(function() {

    var keyPressed;
    var selector;

    var $gameScreen = $('.game-screen'),
        $gameTile = $('.game-tile'),
        $gameMap = $('#game-map');

    var mapArray,
        mapType,
        pokemonToGenerate,
        mapNumber;

    var maps = {
          'map1': [
            [ null,  null,  null,  null,  null,  null, 'm3v', 'm3v',  null,  null,  null,  null,  null,  null],
            [ null,  'o1',  'o1',  'o1',  'o1',  'o1',     0,     0,  'o1',  'o1',  'o1',  'o1',  'o1',  null],
            [ null,  'o1',     0,  'o1',     0,     0,     0,     0,     0,  'o1',     0,     0,  'o1',  null],
            ['m2h',     0,     0,  'o2',     0,  'o3',  'o3',  'o1',     0,  'o2',  'o2',     0,     0, 'm2h'],
            ['m2h',     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 'm2h'],
            [ null,  'o1',     0,     0,  'o1',     0,  'o3',     0,     0,  'o1',     0,     0,  'o1',  null],
            [ null,  'o1',  'o1',  'o1',  'o1',  'o1',     0,     0,  'o1',  'o1',  'o1',  'o1',  'o1',  null],
            [ null,  null,  null,  null,  null,  null, 'm3v', 'm3v',  null,  null,  null,  null,  null,  null]
          ],
          'background1': 'grass.png',
          'pokemon1': [ 1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 35, 36, 43, 44,
                        45, 46, 47, 50, 51, 52, 53, 56, 57, 63, 64, 65, 69, 70, 71, 77, 78, 83, 84, 85, 100,
                        101, 108, 113, 114, 115, 123, 127, 128, 143, 144 ],
          'map2': [
            [ null,  null,  null,  null,  null,  null, 'm4v', 'm4v',  null,  null,  null,  null,  null, null],
            [ null,  'o1',  'w1',  'w5',  'w5',  'w6',     0,     0, 'w4',  'w7',  'w5',  'w5',  'w8',  null],
            [ null,  'o1',     0,  'w4',  'w8',  'w3',     0,     0, 'w4',  'w5',  'w9',  'w8',  'w2',  null],
            [ 'm1h',    0,     0,  'w4',  'w6',     0,     0,  'o2', 'w4',  'w7',  'w2',  'w3',     0, 'm1h'],
            [ 'm1h',    0,     0,  'w1',  'w3',     0,     0,     0, 'w1',  'w3',     0,     0,     0, 'm1h'],
            [ null,  'o1',     0,     0,     0,     0,     0,     0,    0,     0,     0,     0,  'o1',  null],
            [ null,  'o1',  'o1',  'o1',  'o1',  'o1',     0,     0, 'o1',  'o1',  'o1',  'o1',  'o1',  null],
            [ null,  null,  null,  null,  null,  null, 'm4v', 'm4v',  null,  null,  null,  null,  null, null]
          ],
          'background2': 'grass.png',
          'pokemon2': [ 7, 8, 9, 10, 11, 12, 13, 14, 25, 26, 29, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 
                        49, 60, 61, 62, 66, 67, 68, 72, 73, 79, 80, 87, 87, 90, 91, 98, 99, 116, 117, 118, 119, 
                        120, 121, 124, 129, 132, 133, 134, 145 ],
          'map3': [
            [ null,  null,  null,  null,  null,  null, 'm1v', 'm1v',  null,  null,  null,  null,  null,  null],
            [ null,  's1',  's1',  's1',  's1',  's1',     0,     0,  's1',  's1',  's1',  's1',  's1',  null],
            [ null,  's1',     0,     0,     0,     0,  's4',     0,     0,     0,     0,     0,  's2',  null],
            [ 'm4h',    0,  's1',     0,  's3',     0,     0,  's3',  's2',     0,  's1',     0,     0, 'm4h'],
            [ 'm4h',    0,     0,  's2',     0,     0,     0,     0,     0,  's4',  's3',     0,     0, 'm4h'],
            [ null,  's2',     0,     0,     0,  's4',     0,     0,     0,     0,     0,     0,  's1',  null],
            [ null,  's1',  's1',  's1',  's1',  's1',     0,     0,  's1',  's1',  's1',  's1',  's1',  null],
            [ null,  null,  null,  null,  null,  null, 'm1v', 'm1v',  null,  null,  null,  null,  null,  null]
          ],
          'background3': 'snow.png',
          'pokemon3': [ 7, 8, 9, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 60, 61, 62, 66, 67, 
                        68, 81, 82, 86, 87, 90, 91, 100, 101, 115, 122, 124, 125, 128, 130, 131, 133, 134, 133, 135, 
                        137, 144, 145, 147, 148, 149 ],
          'map4': [
            [ null,  null,  null,  null,  null,  null, 'm2v', 'm2v',  null,  null,  null,  null,  null,  null],
            [ null,  'c7',  'c7',  'c7',  'c2',  'c3',     0,     0,  'c1',  'c7',  'c7',  'c2',  'c7',  null],
            [ null,  'c2',  'c2',  'c3',     0,     0,     0,     0,     0,  'c1',  'c3',     0,  'c1',  null],
            [ 'm3h',    0,     0,  'c8',     0,  'c8',     0,  'c8',     0,     0,  'c8',     0,     0, 'm3h'],
            [ 'm3h',    0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 'm3h'],
            [ null,  'c6',     0,  'c4',  'c6',     0,  'c8',     0,     0,  'c4',  'c6',     0,  'c4',  null],
            [ null,  'c7',  'c5',  'c7',  'c7',  'c6',     0,     0,  'c5',  'c7',  'c7',  'c7',  'c7',  null],
            [ null,  null,  null,  null,  null,  null, 'm2v', 'm2v',  null,  null,  null,  null,  null,  null]
          ],
          'background4': 'cavebg.png',
          'pokemon4': [ 4, 5, 6, 23, 24, 27, 28, 37, 38, 39, 40, 41, 42, 50, 51, 54, 55, 58, 59, 66, 67, 
                        68, 74, 75, 76, 77, 78, 88, 89, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 
                        109, 110, 111, 112, 126, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 146, 151 ]
        },
        ashUrl = '<img src="/assets/ash/d1.png" id="ash">',
        ashPos = { row: 4, col: 10 },
        columnHeight;

    // Sets the height of a tile to be the same as the width
    // to make each one a square
    function setSizeMap() {
      columnHeight = Math.floor($gameMap.width() / 12);
      var marginLeft = ($gameScreen.width() - $gameMap.width()) / 2;
      $gameTile.height(columnHeight);
      $gameTile.width(columnHeight);
      $gameMap.css('margin-left', marginLeft);
    }
    setSizeMap();
    $(window).on("resize", setSizeMap);

    // Generates jquery selector for the given row and column
    function generateSelector(row, col) {
      selector = '#r' + row + 'c' + col;
      return selector;
    }

    // Place given obstacle at the given row and column
    function placeObstacle(obstacle, row, col) {
      selector = generateSelector(row, col);
      $(selector).addClass(obstacle);
      $(selector).addClass('obstacle');
    }

    // Place given obstacle at the given row and column
    function placeBackground(image, row, col) {
      selector = generateSelector(row, col);
      $(selector).css('background-image', 'url("assets/' + image + '")');
    }

    function placeAsh(row, col) {
      selector = generateSelector(row, col);
      $(selector).html(ashUrl);
    }

    // Places the pokemon on the map
    function placePokemon(id, row, col) {
      selector = generateSelector(row, col);
      $(selector).addClass('pokemon');
      imageUrlToAppend = '<img src="/assets/pokemon/' + id + '.png" class="img-responsive">';
      $(selector).html(imageUrlToAppend);
    }

    // Generates given number of pokemon on the map
    function generatePokemon(number, mapNumber) {
      var pokemonId,
          checkTile,
          row,
          col,
          imageUrlToAppend,
          pokemonArray = maps['pokemon' + mapNumber];
      for(i=0; i<number; i++) {
        pokemonId = pokemonArray[Math.floor(pokemonArray.length*Math.random())];
        checkTile = true;
        while (checkTile) {
          row = 1 + Math.floor(4*Math.random());
          col = 1 + Math.floor(10*Math.random());
          if (mapArray[row][col] === 0 && (row !== ashPos.row && col !== ashPos.col)) {
            if (pokemonId === undefined) { alert("hi")}
            checkTile = false;
            placePokemon(pokemonId, row, col);
            mapArray[row][col] = pokemonId;
          }
        }
      }
    }

    function setMap() {
      var imageUrlToAppend;
      placeAsh(ashPos.row, ashPos.col);
      for(i=1;i<=6;i++) {
        for(j=1;j<=12;j++) {
          if (typeof mapArray[i][j] === 'string') {
            placeObstacle(mapArray[i][j], i, j);
          } else if (typeof mapArray[i][j] === 'number') {
            placeBackground(maps['background'+ mapNumber], i, j);
          }
          if (typeof mapArray[i][j] === 'number' && mapArray[i][j] > 0) {
            placePokemon(mapArray[i][j], i, j);
          }
        }
      }
    }

    function moveLeft(position, selector) {
      selector.animate({ left: ('-='+columnHeight) });
      position.col -= 1;
    }

    function moveUp(position, selector) {
      selector.animate({ top: ('-='+columnHeight) });
      position.row -= 1;
    }

    function moveRight(position, selector) {
      selector.animate({ left: ('+='+columnHeight) });
      position.col += 1;
    }

    function moveDown(position, selector) {
      selector.animate({ top: ('+='+columnHeight) });
      position.row += 1;
    }    

    function checkLeft(position) {
      $('#ash').attr('src', '/assets/ash/l1.png')
      return mapArray[position.row][position.col - 1];
    }

    function checkUp(position) {
      $('#ash').attr('src', '/assets/ash/u1.png')
      return mapArray[position.row - 1][position.col];
    }

    function checkRight(position) {
      $('#ash').attr('src', '/assets/ash/r1.png')
      return mapArray[position.row][position.col + 1];
    }

    function checkDown(position) {
      $('#ash').attr('src', '/assets/ash/d1.png')
      return mapArray[position.row + 1][position.col];
    }

    function removeLeft(position) {
      mapArray[position.row][position.col - 1] = 0;
    }

    function removeUp(position) {
      mapArray[position.row - 1][position.col] = 0;
    }

    function removeRight(position) {
      mapArray[position.row][position.col + 1] = 0;
    }

    function removeDown(position) {
      mapArray[position.row + 1][position.col] = 0;
    }


    var key = {
      '106': { 
        position: checkLeft, 
        direction: moveLeft,
        remove: removeLeft
      },
      '105': { 
        position: checkUp,
        direction: moveUp,
        remove: removeUp
      },
      '108': { 
        position: checkRight,
        direction: moveRight,
        remove: removeRight
      },
      '107': { 
        position: checkDown,
        direction: moveDown,
        remove: removeDown
      }
    }

    $(document).on('keypress', function(event) {
      keyPressed = event.which.toString();
      var keyValue = key[keyPressed].position(ashPos);
      if (keyValue === 0) {
        // moveLeft, moveUp, etc.
        key[keyPressed].direction(ashPos, $('#ash'))
      } else if (keyValue[0] === 'm') {
        // swap locations on the map
        if (keyValue[2] === 'h') { //horizontal shift on map
          if (ashPos.col === 1) { ashPos.col = 12; }
          else { ashPos.col = 1; }
        } else {
          if (ashPos.row === 1) { ashPos.row = 6; }
          else { ashPos.row = 1; }
        }
        // load new map with map# from location and position from above
        var newMap = 'map'+keyValue[1];
        loadNewMap(newMap, ashPos, keyValue[1]);
      } else if (typeof key[keyPressed].position(ashPos) === 'number') {
        url = '/pokemons/' + key[keyPressed].position(ashPos)
        key[keyPressed].remove(ashPos); // remove pokemon from the map
        $(document).off('keypress');
        saveState(url, 1, mapNumber);
      }
    }); 

    function loadNewMap(map, position, mapNumber) {
      mapArray = maps[map];
      ashPos = position;
      saveState('/map', 3, mapNumber);
    }

    //now needs to pass through some kind of request and be able to access through the controller 
    function saveState(url, pokemonToGenerate, mapNumber) {
      var state = { mapArray: mapArray,
                    ashPos: ashPos,
                    pokemonToGenerate: pokemonToGenerate,
                    mapNumber: mapNumber,
                    backgroundTile: maps['background'+mapNumber] };
      $.ajax({
        type: "post",
        url: "/mapstate",
        data: {data_value: JSON.stringify(state) },
        success: function() {
          window.location.href = url; 
        }
      });
    };

    function loadState() {
      $.ajax({
        type: "get",
        url: "/mapstate",
        success: function(data) {
          if (data.initialize_map) {
            mapArray = maps['map1'];
            mapNumber = 1;
            setMap();
            generatePokemon(3, mapNumber);
          } else {
            mapArray = data.map_state.mapArray;
            ashPos = data.map_state.ashPos;
            pokemonToGenerate = data.map_state.pokemonToGenerate;
            mapNumber = data.map_state.mapNumber;
            setMap();
            generatePokemon(pokemonToGenerate, mapNumber);
          }
        } 
      });
    }
    loadState();
  });
});