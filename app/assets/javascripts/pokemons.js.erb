$(document).ready(function() {
  $('.pokemons.show').ready(function() {

    var $battleEncounter = $('#battle-encounter'),
        $battleQuestions = $('#battle-questions'),
        $battleCaught = $('#battle-caught'),
        $battleEscaped = $('#battle-escaped'),
        $battleToggle = $('.battle-toggle');

    var $gameScreen = $('.game-screen'),
        $battleScreen = $('#battle-screen');

    var $hp = $('#hp'),
        $battlePokemon = $('.battle-pokemon'),
        $chooseYou = $('#choose-you'),
        $answerChoice = $('#answer-choice'),
        $pokemonNameField = $('#pokemon-name-field'),
        $hiddenTimer = $('#hidden-timer'),
        $timer = $('#timer');

    var $problemNumber = $('#problem-number'),
        $num1 = $('#num1'),
        $num2 = $('#num2'),
        $operation = $('#operation'),
        $choice1 = $('#choice1'),
        $choice2 = $('#choice2'),
        $choice3 = $('#choice3');

    var problemTypes = {
      simpleAddition: {
        mathFunction: createAdditionProblem,
        min: 0,
        max: 10
      },
      ddAddition: {
        mathFunction: createAdditionProblem,
        min: 10,
        max: 99
      },
      simpleSubtraction: {
        mathFunction: createSubtractionProblem,
        min: 0,
        max: 10
      },
      ddSubtraction: {
        mathFunction: createSubtractionProblem,
        min: 10,
        max: 99
      },
      simpleMultiplication: {
        mathFunction: createMultiplicationProblem,
        min: 2 ,
        max: 10
      },
      ddMultiplication: {
        mathFunction: createMultiplicationProblem,
        min: 10,
        max: 99
      },
      simpleDivision: {
        mathFunction: createSimpleDivisionProblem
      }
    };

    var questionNumber = 1;
    var pokemonTemp = $battlePokemon.attr('src');

    var keyPressed;
    var questions;
    var caught = false;

    // Sets the height of a tile to be the same as the width
    // to make each one a square
    function setSizeBattle() {
      var screenHeight = Math.floor($gameScreen.width() / 12);
      $battleScreen.height(6*screenHeight);
    }
    setSizeBattle();
    $(window).on("resize", setSizeBattle);

    function selectView(selector) {
      $battleToggle.hide();
      selector.show();
    }

    // Displays the questions
    function displayQuestions() {
      type = Math.floor(Math.random(1) * userQuestionTypes.length);
      question = problemTypes[userQuestionTypes[type]].mathFunction(3, problemTypes[userQuestionTypes[type]].min, problemTypes[userQuestionTypes[type]].max);
      inputValues(questionNumber, question);
      $(document).on('keypress', function(event) {
        event.preventDefault();
        keyPressed = event.which;
        if (keyPressed >= 106 && keyPressed <= 108) {
          $(document).off('keypress');
          var answerChosen;
          if (keyPressed === 106) {
            answerChosen = question.choices[0];
          } else if (keyPressed === 107) {
            answerChosen= question.choices[1];
          } else if (keyPressed === 108) {
            answerChosen = question.choices[2];
          }
          if ((keyPressed === 106 && question.answer === question.choices[0]) ||
             (keyPressed === 107 && question.answer === question.choices[1]) ||
             (keyPressed === 108 && question.answer === question.choices[2])) {
            $chooseYou.show();
            $answerChoice.html(answerChosen);
            if (questionNumber === 1) {
              $hp.css('width', '76%');
              questionNumber++;
              displayQuestions();
            } else if (questionNumber === 2) {
              $hp.css('width', '52%')
              questionNumber++;
              displayQuestions();
            } else if (questionNumber === 3) {
              $hp.css('width', '28%')
              $hp.removeClass('progress-bar-success');
              $hp.addClass('progress-bar-warning');
              $battlePokemon.attr('src', '/assets/pokeball.png');
              $battlePokemon.addClass('animated shake')
                            .delay(1000).queue(function() {
                              $(this).attr('src', pokemonTemp);
                            });
              questionNumber++;
              displayQuestions();
            } else if (questionNumber === 4) {
              // replace image with pokeball and pop out
              $hp.css('width', '4%')
              $hp.removeClass('progress-bar-warning');
              $hp.addClass('progress-bar-danger');
              $battlePokemon.attr('src', '/assets/pokeball.png') 
              $battlePokemon.addClass('tada');
              questionNumber++;
              displayQuestions();
            } else {
              // replace image with pokeballj
              caught=true;
              selectView($battleCaught);
              $pokemonNameField.focus();
              questionNumber = 1
            }
          } else {
            pokemonEscaped();
          }
        }
      });
    }

    function pokemonEscaped() {
      selectView($battleEscaped);
      questionNumber = 1;
      $battlePokemon.attr('src', pokemonTemp);
      $(document).on('keypress', function(event) {
        keyPressed = event.which;
        if (keyPressed === 32) {
          $(document).off('keypress');
          window.location.href = '/map';
        }
      })      
    }

    // Opens up the battle questions view
    function startBattle() {
      //playing with possible attention grabbers for the user when battle screen occurs
      // $(".game-screen").addClass("animated flash");
      selectView($battleEncounter);
      $(document).on('keypress', function(event) {
        keyPressed = event.which;
        if (keyPressed === 32) {
          $(document).off('keypress');
          startTimer($hiddenTimer.text().toString(), $timer)
          selectView($battleQuestions);
          displayQuestions();
        }
      });
    }

    // Inputs the values of the question on the html page    
    function inputValues(questionNumber, question) {
      $problemNumber.html(questionNumber);
      $num1.html(question.num1);
      $num2.html(question.num2);
      $operation.html(question.operation);
      $choice1.html(question.choices[0]);
      $choice2.html(question.choices[1]);
      $choice3.html(question.choices[2]);
    }

    function startTimer(duration, display) {
      var timer = duration;
      var seconds;
      var interval = setInterval(function () {
        seconds = timer;
        if(seconds < 10) {
          seconds = "0" + seconds;
        }
        display.text("0:" + seconds);
        //Auto resets timer once reaches 0. 
        //If need to reset, funct clearInterval. setInterval return value as parameter. 
        timer--;
        if (timer < 10) {
          $timer.css('visibility', 'visible');
        }
        if (timer < 0 && !caught) {
          clearInterval(interval);
          $timer.css('visibility', 'hidden');
          pokemonEscaped();
        }
      }, 1000);
    }

    startBattle();
  });
});